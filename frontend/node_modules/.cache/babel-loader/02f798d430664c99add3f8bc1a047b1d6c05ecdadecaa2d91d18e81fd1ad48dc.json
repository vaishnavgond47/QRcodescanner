{"ast":null,"code":"var _jsxFileName = \"D:\\\\QR-Code-Scanning-Web-App-main (1)\\\\QR-Code-Scanning-Web-App-main\\\\Qr-Reader-main\\\\frontend\\\\src\\\\Pages\\\\QrCodeReader.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport QrReader from 'react-qr-scanner';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst QrCodeReader = () => {\n  _s();\n  const [result, setResult] = useState(null);\n  const [scanning, setScanning] = useState(false);\n  const [id, setId] = useState(null);\n  const Navigate = useNavigate();\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decodedToken = jwt_decode(token);\n        if (decodedToken && decodedToken.id) {\n          setId(decodedToken.id);\n        } else {\n          Navigate('/login');\n        }\n      } catch (error) {\n        Navigate('/login');\n        console.error('Error decoding the JWT:', error);\n      }\n    } else {\n      Navigate('/login');\n    }\n  }, [Navigate]);\n  const handleScan = async data => {\n    if (data) {\n      setResult(data);\n      if (scanning && id) {\n        try {\n          const API_URL = process.env.REACT_APP_BACKEND_URL;\n          const response = await axios.post(`${API_URL}/qrcodes`, {\n            user_id: id,\n            data: data.text\n          });\n          console.log('API Response:', response.data);\n        } catch (error) {\n          console.error('API Error:', error);\n        }\n      }\n    }\n  };\n  const handleError = error => {\n    console.error(error);\n  };\n  const toggleScanning = () => {\n    if (!scanning) {\n      setScanning(true);\n    } else {\n      setScanning(false);\n      setResult(null);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-1/2 mx-auto mt-5 text-center\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      className: \"text-2xl mb-4\",\n      children: \"QR Code Reader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), scanning && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(QrReader, {\n        delay: 100,\n        style: {\n          width: '100%'\n        },\n        onError: handleError,\n        onScan: handleScan\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Scanned Data: \", result.text]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: `${scanning ? 'bg-red-500 hover:bg-red-700' : 'bg-green-500 hover:bg-green-700'} text-white font-bold py-2 px-4 rounded mt-4`,\n      onClick: toggleScanning,\n      children: scanning ? 'Stop Scanning' : 'Start Scanning'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 1\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n};\n_s(QrCodeReader, \"B8mhImU/vRvV+6Li9h/DB6LAfrc=\", false, function () {\n  return [useNavigate];\n});\n_c = QrCodeReader;\nexport default QrCodeReader;\nvar _c;\n$RefreshReg$(_c, \"QrCodeReader\");","map":{"version":3,"names":["React","useEffect","useState","QrReader","axios","jwt_decode","useNavigate","jsxDEV","_jsxDEV","QrCodeReader","_s","result","setResult","scanning","setScanning","id","setId","Navigate","token","localStorage","getItem","decodedToken","error","console","handleScan","data","API_URL","process","env","REACT_APP_BACKEND_URL","response","post","user_id","text","log","handleError","toggleScanning","className","children","fileName","_jsxFileName","lineNumber","columnNumber","delay","style","width","onError","onScan","onClick","_c","$RefreshReg$"],"sources":["D:/QR-Code-Scanning-Web-App-main (1)/QR-Code-Scanning-Web-App-main/Qr-Reader-main/frontend/src/Pages/QrCodeReader.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport QrReader from 'react-qr-scanner';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport { useNavigate } from 'react-router-dom';\n\nconst QrCodeReader = () => {\n  const [result, setResult] = useState(null);\n  const [scanning, setScanning] = useState(false);\n  const [id, setId] = useState(null);\n  const Navigate = useNavigate();\n\n  useEffect(() => {\n    const token = localStorage.getItem('token');\n    if (token) {\n      try {\n        const decodedToken = jwt_decode(token);\n        if (decodedToken && decodedToken.id) {\n          setId(decodedToken.id);\n        }else{\n          Navigate('/login')\n        }\n      } catch (error) {\n      Navigate('/login')\n\n        console.error('Error decoding the JWT:', error);\n      }\n    }else{\n      Navigate('/login')\n    }\n  }, [Navigate]);\n\n  const handleScan = async (data) => {\n    if (data) {\n      setResult(data);\n      if (scanning && id) {\n        try {\n          const API_URL = process.env.REACT_APP_BACKEND_URL;\n          const response = await axios.post(`${API_URL}/qrcodes`, { user_id: id, data: data.text });\n          console.log('API Response:', response.data);\n        } catch (error) {\n          console.error('API Error:', error);\n        }\n      }\n    }\n  };\n\n  const handleError = (error) => {\n    console.error(error);\n  };\n\n  const toggleScanning = () => {\n    if (!scanning) {\n      setScanning(true);\n    } else {\n      setScanning(false);\n      setResult(null);\n    }\n  };\n\n\n  return (\n    <div className=\"w-1/2 mx-auto mt-5 text-center\">\n      <h2 className=\"text-2xl mb-4\">QR Code Reader</h2>\n\n  \n\n      {scanning && (\n        <div>\n          <QrReader\n            delay={100}\n            style={{ width: '100%' }}\n            onError={handleError}\n            onScan={handleScan}\n          />\n          {result && (\n            <div>\n              <p>Scanned Data: {result.text}</p>\n            </div>\n          )}\n        </div>\n      )}\n\n<button\n        className={`${scanning ? 'bg-red-500 hover:bg-red-700': 'bg-green-500 hover:bg-green-700'} text-white font-bold py-2 px-4 rounded mt-4`}\n        onClick={toggleScanning}\n      >\n        {scanning ? 'Stop Scanning' : 'Start Scanning'}\n      </button>\n    </div>\n  );\n};\n\nexport default QrCodeReader;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}